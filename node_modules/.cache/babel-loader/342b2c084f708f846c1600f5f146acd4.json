{"ast":null,"code":"var _jsxFileName = \"/Users/kangseokwoo/react_movie_webapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Movie from './Movie';\n/*\nobject - props\n*/\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this._renderMovies = () => {\n      const movies = this.state.movies.map((movie, index) => {\n        return React.createElement(Movie, {\n          title: movie.title,\n          poster: movie.poster,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n      return movies;\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      // execute after certain amount of time\n      //this.state.greeting = 'Something' // Should Never Write state directly, render thing does not updated\n      this.setState({\n        movies: [{\n          id: 1,\n          title: \"Matrix\",\n          poster: \"https://upload.wikimedia.org/wikipedia/en/thumb/0/06/Ultimate_Matrix_Collection_poster.jpg/220px-Ultimate_Matrix_Collection_poster.jpg\"\n        }, {\n          id: 2,\n          title: \"Full Metal Jacket\",\n          poster: \"https://images2.minutemediacdn.com/image/upload/c_crop,h_2132,w_3794,x_0,y_22/f_auto,q_auto,w_1100/v1555155644/shape/mentalfloss/full-metal-jacket-hed.jpg\"\n        }, {\n          id: 3,\n          title: \"Old boy\",\n          poster: \"https://i.ytimg.com/vi/N36z1-WzUvk/maxresdefault.jpg\"\n        }, {\n          id: 4,\n          title: \"Star Wars\",\n          poster: \"https://i.ytimg.com/vi/j2GjT5O1G2Q/maxresdefault.jpg\"\n        }]\n      });\n    }, 5000); // wait 5 seconds state changes automatically\n  }\n\n  render() {\n    console.log(\"render \");\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.movies ? this._renderMovies() : 'loading');\n  }\n\n}\n\nexport default App; // array map() -> map create new array with the elements of the other array\n// create new components using array map function\n// react need key when it have so many elements.\n// jsx needs {variables}","map":{"version":3,"sources":["/Users/kangseokwoo/react_movie_webapp/src/App.js"],"names":["React","Component","Movie","App","state","_renderMovies","movies","map","movie","index","title","poster","componentDidMount","setTimeout","setState","id","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA;;;;AAKA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAI1BG,KAJ0B,GAIlB,EAJkB;;AAAA,SAwC1BC,aAxC0B,GAwCV,MAAM;AACpB,YAAMC,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrD,eAAO,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAED,KAAK,CAACE,KAApB;AAA2B,UAAA,MAAM,EAAIF,KAAK,CAACG,MAA3C;AAAmD,UAAA,GAAG,EAAIF,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFc,CAAf;AAGA,aAAOH,MAAP;AACD,KA7CyB;AAAA;;AAO1BM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAM;AAAE;AACjB;AACA,WAAKC,QAAL,CAAc;AACZR,QAAAA,MAAM,EAAG,CACP;AACES,UAAAA,EAAE,EAAG,CADP;AAEEL,UAAAA,KAAK,EAAE,QAFT;AAGEC,UAAAA,MAAM,EAAI;AAHZ,SADO,EAMP;AACEI,UAAAA,EAAE,EAAG,CADP;AAEEL,UAAAA,KAAK,EAAE,mBAFT;AAGEC,UAAAA,MAAM,EAAI;AAHZ,SANO,EAYP;AACEI,UAAAA,EAAE,EAAG,CADP;AAEEL,UAAAA,KAAK,EAAE,SAFT;AAGEC,UAAAA,MAAM,EAAM;AAHd,SAZO,EAkBP;AACEI,UAAAA,EAAE,EAAG,CADP;AAEEL,UAAAA,KAAK,EAAE,WAFT;AAGEC,UAAAA,MAAM,EAAE;AAHV,SAlBO;AADG,OAAd;AA2BD,KA7BS,EA6BP,IA7BO,CAAV,CADkB,CA8BT;AACV;;AAQDK,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWE,MAAX,GAAoB,KAAKD,aAAL,EAApB,GAA4C,SAD/C,CADF;AAKD;;AArDyB;;AAuD5B,eAAeF,GAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Movie from './Movie'\n\n/*\nobject - props\n*/\n\n\nclass App extends Component {\n  // Render : ComponentWillMount() -> render() -> componentDIdMount()\n  // Update : ComponentReceiveProps() -> ShouldComponentUpdate() -> ComponentWillUpdate() -> render() -> componentDidMount()\n  // Whenever state is changed, Component Updates, render happens\n  state = {    \n  }\n\n  componentDidMount() {\n    setTimeout(() => { // execute after certain amount of time\n      //this.state.greeting = 'Something' // Should Never Write state directly, render thing does not updated\n      this.setState({\n        movies : [\n          {\n            id : 1,\n            title: \"Matrix\",\n            poster:   \"https://upload.wikimedia.org/wikipedia/en/thumb/0/06/Ultimate_Matrix_Collection_poster.jpg/220px-Ultimate_Matrix_Collection_poster.jpg\"\n          },\n          {\n            id : 2,\n            title: \"Full Metal Jacket\",\n            poster:   \"https://images2.minutemediacdn.com/image/upload/c_crop,h_2132,w_3794,x_0,y_22/f_auto,q_auto,w_1100/v1555155644/shape/mentalfloss/full-metal-jacket-hed.jpg\",\n          \n          },\n          {\n            id : 3,\n            title: \"Old boy\",\n            poster:     \"https://i.ytimg.com/vi/N36z1-WzUvk/maxresdefault.jpg\",\n        \n          },  \n          {\n            id : 4,\n            title: \"Star Wars\",\n            poster: \"https://i.ytimg.com/vi/j2GjT5O1G2Q/maxresdefault.jpg\"\n          }\n        ]\n        \n      })\n    }, 5000) // wait 5 seconds state changes automatically\n  }\n\n  _renderMovies = () => {\n    const movies = this.state.movies.map((movie, index) => {\n      return <Movie title={movie.title} poster = {movie.poster} key = {index} /> \n    })\n    return movies\n  }\n  render() {\n    console.log(\"render \");\n    return (\n      <div className=\"App\">\n        {this.state.movies ? this._renderMovies() :  'loading'}\n      </div>\n    );\n  }\n}\nexport default App;\n\n// array map() -> map create new array with the elements of the other array\n// create new components using array map function\n// react need key when it have so many elements.\n// jsx needs {variables} "]},"metadata":{},"sourceType":"module"}