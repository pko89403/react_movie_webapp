{"ast":null,"code":"var _jsxFileName = \"/Users/kangseokwoo/react_movie_webapp/src/Movie.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Movie.css\";\n/*\nclass Movie extends Component{\n\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        poster: PropTypes.string\n    } // checking correct type pf prop_types\n\n    render() {\n        // console.log(this.props)\n        return (\n            <div>\n                <MoviePoster poster={this.props.poster}/>\n                <h1>{this.props.title}</h1>\n            </div>\n        );\n    }   \n} \n\nclass MoviePoster extends Component {\n\n    static propTypes = {\n        poster : PropTypes.string.isRequired\n    }\n    \n    render() {\n        return(\n            // parent give props to siblings\n            <img src={this.props.poster}></img>\n        )\n    }\n}\n*/\n// functional components\n// no need state, no life cycle, some component just return need just one props\n\nfunction Moive({\n  title,\n  poster\n}) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(MoviePoster, {\n    poster: poster,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, title));\n}\n\nfunction MoviePoster({\n  poster\n}) {\n  return React.createElement(\"img\", {\n    src: poster,\n    alt: \"Movie Poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n}\n\nMoviePoster.prototype = {\n  poster: PropTypes.string.isRequired\n};\nexport default Movie;","map":{"version":3,"sources":["/Users/kangseokwoo/react_movie_webapp/src/Movie.js"],"names":["React","Component","PropTypes","Moive","title","poster","MoviePoster","prototype","string","isRequired","Movie"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;;AACA,SAASC,KAAT,CAAe;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAf,EAA+B;AAC3B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAIA,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CAFJ,CADJ;AAMH;;AAGD,SAASE,WAAT,CAAqB;AAACD,EAAAA;AAAD,CAArB,EAA+B;AAC3B,SACI;AAAK,IAAA,GAAG,EAAIA,MAAZ;AAAoB,IAAA,GAAG,EAAG,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AAEDC,WAAW,CAACC,SAAZ,GAAwB;AACpBF,EAAAA,MAAM,EAAEH,SAAS,CAACM,MAAV,CAAiBC;AADL,CAAxB;AAGA,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport \"./Movie.css\";\n/*\nclass Movie extends Component{\n\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        poster: PropTypes.string\n    } // checking correct type pf prop_types\n\n    render() {\n        // console.log(this.props)\n        return (\n            <div>\n                <MoviePoster poster={this.props.poster}/>\n                <h1>{this.props.title}</h1>\n            </div>\n        );\n    }   \n} \n\nclass MoviePoster extends Component {\n\n    static propTypes = {\n        poster : PropTypes.string.isRequired\n    }\n    \n    render() {\n        return(\n            // parent give props to siblings\n            <img src={this.props.poster}></img>\n        )\n    }\n}\n*/\n// functional components\n// no need state, no life cycle, some component just return need just one props\nfunction Moive({title, poster}){\n    return (\n        <div>\n            <MoviePoster poster = {poster} />\n            <h1>{title}</h1>\n        </div>\n    )\n}\n\n\nfunction MoviePoster({poster}) {\n    return (\n        <img src = {poster} alt = \"Movie Poster\" />\n    )\n}\n\nMoviePoster.prototype = {\n    poster: PropTypes.string.isRequired\n}\nexport default Movie"]},"metadata":{},"sourceType":"module"}