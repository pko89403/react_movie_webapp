{"ast":null,"code":"var _jsxFileName = \"/Users/kangseokwoo/react_movie_webapp/src/Movie.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Movie.css\";\n\nclass Movie extends Component {\n  // checking correct type pf prop_types\n  render() {\n    // console.log(this.props)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(MoviePoster, {\n      poster: this.props.poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.title));\n  }\n\n}\n/*\nclass MoviePoster extends Component {\n\n    static propTypes = {\n        poster : PropTypes.string.isRequired\n    }\n    \n    render() {\n        return(\n            // parent give props to siblings\n            <img src={this.props.poster}></img>\n        )\n    }\n}\n*/\n// functional components\n// no need state, no life cycle, some component just return need just one props\n\n\nMovie.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string\n};\n\nfunction MoviePoster({\n  poster\n}) {\n  return React.createElement(\"img\", {\n    src: poster,\n    alt: \"Movie Poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/kangseokwoo/react_movie_webapp/src/Movie.js"],"names":["React","Component","PropTypes","Movie","render","props","poster","title","propTypes","string","isRequired","MoviePoster"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA6B;AAKvB;AAEFG,EAAAA,MAAM,GAAG;AACL;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWE,KAAhB,CAFJ,CADJ;AAMH;;AAfwB;AAiB7B;;;;;;;;;;;;;;;AAeA;AACA;;;AAjCMJ,K,CAEKK,S,GAAY;AACfD,EAAAA,KAAK,EAAEL,SAAS,CAACO,MAAV,CAAiBC,UADT;AAEfJ,EAAAA,MAAM,EAAEJ,SAAS,CAACO;AAFH,C;;AAgCvB,SAASE,WAAT,CAAqB;AAACL,EAAAA;AAAD,CAArB,EAA+B;AAC3B,SACI;AAAK,IAAA,GAAG,EAAIA,MAAZ;AAAoB,IAAA,GAAG,EAAG,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AACD,eAAeH,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport \"./Movie.css\";\n\nclass Movie extends Component{\n\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        poster: PropTypes.string\n    } // checking correct type pf prop_types\n\n    render() {\n        // console.log(this.props)\n        return (\n            <div>\n                <MoviePoster poster={this.props.poster}/>\n                <h1>{this.props.title}</h1>\n            </div>\n        );\n    }   \n} \n/*\nclass MoviePoster extends Component {\n\n    static propTypes = {\n        poster : PropTypes.string.isRequired\n    }\n    \n    render() {\n        return(\n            // parent give props to siblings\n            <img src={this.props.poster}></img>\n        )\n    }\n}\n*/\n// functional components\n// no need state, no life cycle, some component just return need just one props\nfunction MoviePoster({poster}) {\n    return (\n        <img src = {poster} alt = \"Movie Poster\" />\n    )\n}\nexport default Movie"]},"metadata":{},"sourceType":"module"}